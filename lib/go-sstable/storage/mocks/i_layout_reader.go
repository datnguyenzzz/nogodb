// Code generated by mockery. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ILayoutReader is an autogenerated mock type for the ILayoutReader type
type ILayoutReader struct {
	mock.Mock
}

// Close provides a mock function with no fields
func (_m *ILayoutReader) Close() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Close")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ReadAt provides a mock function with given fields: p, off
func (_m *ILayoutReader) ReadAt(p []byte, off uint64) error {
	ret := _m.Called(p, off)

	if len(ret) == 0 {
		panic("no return value specified for ReadAt")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte, uint64) error); ok {
		r0 = rf(p, off)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewILayoutReader creates a new instance of ILayoutReader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewILayoutReader(t interface {
	mock.TestingT
	Cleanup(func())
}) *ILayoutReader {
	mock := &ILayoutReader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
